// Generated by ChoiceMaker. Do not edit.
package com.choicemaker.demo.simple_person_matching.gendata.gend.internal.Person.xml;
import java.util.logging.*;
import java.util.*;
import java.io.*;
import com.choicemaker.cm.core.*;
import com.choicemaker.cm.core.base.*;
import com.choicemaker.cm.core.util.*;
import com.choicemaker.cm.io.xml.base.*;
import com.choicemaker.util.*;
import com.choicemaker.demo.simple_person_matching.gendata.gend.internal.Person.*;
import java.util.Date;
import com.choicemaker.util.StringUtils;
public final class PersonXmlRecordOutputter implements XmlRecordOutputter {
private static Logger logger = Logger.getLogger(com.choicemaker.demo.simple_person_matching.gendata.gend.internal.Person.xml.PersonXmlRecordOutputter.class.getName());
public void put(Writer w, Record r) throws IOException {
put_PersonImpl(w, (PersonImpl)r);
}
private void put_PersonImpl(Writer w, PersonImpl r) throws IOException {
w.write("<person");
XmlOutput.writeAttribute(w, "linkage_role", r.linkage_role);
XmlOutput.writeAttribute(w, "entityId", r.entityId);
XmlOutput.writeAttribute(w, "recordId", r.recordId);
XmlOutput.writeAttribute(w, "ssn", r.ssn);
XmlOutput.writeAttribute(w, "firstName", r.firstName);
XmlOutput.writeAttribute(w, "middleName", r.middleName);
XmlOutput.writeAttribute(w, "lastName", r.lastName);
XmlOutput.writeAttribute(w, "streetNumber", r.streetNumber);
XmlOutput.writeAttribute(w, "streetName", r.streetName);
XmlOutput.writeAttribute(w, "apartmentNumber", r.apartmentNumber);
XmlOutput.writeAttribute(w, "city", r.city);
XmlOutput.writeAttribute(w, "state", r.state);
XmlOutput.writeAttribute(w, "zip", r.zip);
w.write("/>\n");
}
}
