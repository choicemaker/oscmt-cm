/*
 * @(#)$RCSfile: Production.clues,v $        $Revision: 1.15 $ $Date: 2003/04/01 15:56:32 $
 *
 * Copyright (c) 2001 ChoiceMaker Technologies, Inc.
 * 41 East 11th Street, New York, NY 10128
 * All rights reserved.
 *
 * This software is the confidential and proprietary information of
 * ChoiceMaker Technologies Inc. ("Confidential Information").
 */

package com.choicemaker.demo.simple_person_matching.gendata.gend;

import java.util.*;
import com.choicemaker.cm.core.util.*;
import com.choicemaker.cm.matching.en.*;
import com.choicemaker.cm.matching.en.us.*;
import com.choicemaker.cm.matching.gen.*;

/**
 * Matching clues for Person data generated by UIS Database Generator
 * by Maurico Hernandez. See
 * http://www.cs.utexas.edu/users/ml/riddle/data.html
 */
clueset boolean decision SimplePersonClues uses Person {

	clue mFirstName { match same(r.firstName); }
	clue dFirstName { differ different(r.firstName); }
	clue dFirstNameOnlyInitialMatch {
		differ mFirstName && (q.firstName.length() == 1) && (m.firstName.length() == 1);
	}
	clue mFirstNameVsInitial {
			match dFirstName && ((q.firstName.length() == 1) ^ (m.firstName.length() == 1)) &&
			(q.firstName.charAt(0) == m.firstName.charAt(0));
	}	
	/** Jaro similarity > .95f */
	clue mJaroFirstName {
		match !(mFirstName) &&
			valid(q.firstName) && valid(m.firstName) && 
			(q.firstName.length() >= 2 ) && (m.firstName.length() >= 2) &&
				(Jaro.jaro(q.firstName, m.firstName) >= .95f);
	}
	
	clue mEditDistanceFirstName {
		match !mFirstName && !mJaroFirstName && valid(q.lastName) && valid(m.lastName) &&
			EditDistance2.editDistance2(q.firstName, m.firstName, 1) < 2;
	}
	
	clue mMiddleNameInitialOnly {match same(r.middleName) && (m.middleName.length() == 1);}
	
	clue mMiddleName { match !mMiddleNameInitialOnly && same(r.middleName); }
	clue dMiddleName { differ different(r.middleName); }
	
	clue mLastName { match same(r.lastName); }
	clue dLastName { differ different(r.lastName); }
	
	/** Jaro similarity > .95f */
	clue mJaroLastName {
		match !(mLastName) &&
			valid(q.lastName) && valid(m.lastName) && 
			(q.lastName.length() >= 2 ) && (m.lastName.length() >= 2) &&
				(Jaro.jaro(q.lastName, m.lastName) >= .95f);
	}

	
	clue mEditDistanceLastName {
		match !mLastName && !mJaroLastName && valid(q.lastName) && valid(m.lastName) &&
			EditDistance2.editDistance2(q.lastName, m.lastName, 1) < 2;
	}
	
	clue mSwapFnameLname {
		match 
		!mFirstName && !mLastName &&
		swapsame(2; 2; r.firstName, r.lastName);
	}
	
	clue mSwapFnameLnameApproximate {
		match
		!mFirstName && !mLastName && !mSwapFnameLname &&
		((Jaro.jaro(q.lastName, m.firstName) >= .95f) && 
		(Jaro.jaro(m.lastName, q.firstName) >= .95f)) || 
		((EditDistance2.editDistance2(q.lastName, m.firstName, 1) < 2) &&
		(EditDistance2.editDistance2(q.firstName, m.lastName, 1) < 2));
	}
	
	clue mStreetNumber { match same(r.streetNumber); }
	clue dStreetNumber { differ different(r.streetNumber); }
	clue mStreetName { match same(r.streetName); }
	clue dStreetName { differ different(r.streetName); }
	clue mApproxStreetName {
		match dStreetName && ((Jaro.jaro(q.streetName,m.streetName) >= .95f) ||
		(EditDistance2.editDistance2(q.streetName, m.streetName, 1) < 2))	;
	}
	clue mApartmentNumber { match same(r.apartmentNumber); }
	clue dApartmentNumber { differ different(r.apartmentNumber); }

	clue mstate { match same(r.state); }
	clue dstate { differ different(r.state); }

	clue mSsn { match same(r.ssn); }
	clue dSsn { differ different(r.ssn); }
	final int editDistanceSSN = EditDistance2.editDistance2(q.ssn,m.ssn,3);
	clue mApproxSsn {
		match foreach(int distance : {3, 2, 1 };
			dSsn && editDistanceSSN = distance
		);
	}




	clue mCity { match same(r.city); }
	clue dCity { differ different(r.city); }
	/** Jaro similarity > .95f */
	clue mJaroCity {
		match !(mCity) && valid(q.city) && valid(m.city) &&
			(q.city.length() >= 2 ) && (m.city.length() >= 2) &&
				(Jaro.jaro(q.city, m.city) >= .95f);
	}

	clue mZip { match same(r.zip); }
	clue dZip { differ different(r.zip); }
	clue mApproxZip {
		match dZip && (EditDistance2.editDistance2(q.zip,m.zip,1) < 2);
	}

}
