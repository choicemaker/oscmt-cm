// Generated by ChoiceMaker. Do not edit.
package com.choicemaker.cm.custom.mci.gend.MciRecords;
import com.choicemaker.util.StringUtils;
import com.choicemaker.cm.custom.mci.encryption.*;
import com.choicemaker.cm.custom.mci.matching.*;
import com.choicemaker.cm.custom.mci.nameparser.*;
import com.choicemaker.cm.custom.mci.validation.*;
import com.choicemaker.cm.matching.en.*;
import com.choicemaker.cm.matching.en.us.*;
import com.choicemaker.cm.matching.gen.*;
import com.choicemaker.cm.validation.eclipse.*;
import com.choicemaker.cm.validation.eclipse.impl.*;
import java.util.*;
/**
 * Generated holder class for the node type race. See package documentation for details.
 */
public class RaceHolder implements com.choicemaker.cm.custom.mci.gend.MciRecords.RaceBase, java.io.Serializable {
/** Default constructor. Initializes all all arrays for nested record to zero length arrays and all other values to their defaults (0/null). */public RaceHolder() {
}
/** Zero length array to be used by outer node class. */
public static final RaceHolder[] ZERO_ARRAY = new RaceHolder[0];
private PatientBase outer;
/**
 * Returns the outer node.
 * @return  The outer node.
*/
public PatientBase getOuter() {
return outer;
}
/**
 * Sets the outer node. This method should only be called by generated classes.
 * @param  outer  The outer node.
*/
public void setOuter(PatientBase outer) {
this.outer = outer;
}
private boolean race_cdValid;
protected String race_cd;
/**
 * Returns whether the value of the field race_cd is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field race_cd is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isRace_cdValid() {
return race_cdValid;
}
/**
 * Returns the value of race_cd.
 * @return  The value of race_cd.
*/
public String getRace_cd() {
return race_cd;
}
/**
 * Sets the value of race_cd.
 * @param  __v  The value of race_cd.
*/
public void setRace_cd(String __v) {
this.race_cd = __v;
}
/** Copy constructor. Performs a deep copy of the nodes, but not the values.
 * @param  __o  The node to copy.
*/
public RaceHolder(RaceBase __o) {
race_cd = __o.getRace_cd();
race_cdValid = __o.isRace_cdValid();
}
}
