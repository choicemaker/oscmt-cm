// Generated by ChoiceMaker. Do not edit.
package com.choicemaker.cm.custom.mci.gend.MciRecords;
import com.choicemaker.util.StringUtils;
import com.choicemaker.cm.custom.mci.encryption.*;
import com.choicemaker.cm.custom.mci.matching.*;
import com.choicemaker.cm.custom.mci.nameparser.*;
import com.choicemaker.cm.custom.mci.validation.*;
import com.choicemaker.cm.matching.en.*;
import com.choicemaker.cm.matching.en.us.*;
import com.choicemaker.cm.matching.gen.*;
import com.choicemaker.cm.validation.eclipse.*;
import com.choicemaker.cm.validation.eclipse.impl.*;
import java.util.*;
/**
 * Generated holder class for the node type frozen. See package documentation for details.
 */
public class FrozenHolder implements com.choicemaker.cm.custom.mci.gend.MciRecords.FrozenBase, java.io.Serializable {
/** Default constructor. Initializes all all arrays for nested record to zero length arrays and all other values to their defaults (0/null). */public FrozenHolder() {
}
/** Zero length array to be used by outer node class. */
public static final FrozenHolder[] ZERO_ARRAY = new FrozenHolder[0];
private PatientBase outer;
/**
 * Returns the outer node.
 * @return  The outer node.
*/
public PatientBase getOuter() {
return outer;
}
/**
 * Sets the outer node. This method should only be called by generated classes.
 * @param  outer  The outer node.
*/
public void setOuter(PatientBase outer) {
this.outer = outer;
}
private boolean src_system_idValid;
protected String src_system_id;
/**
 * Returns whether the value of the field src_system_id is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field src_system_id is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isSrc_system_idValid() {
return src_system_idValid;
}
/**
 * Returns the value of src_system_id.
 * @return  The value of src_system_id.
*/
public String getSrc_system_id() {
return src_system_id;
}
/**
 * Sets the value of src_system_id.
 * @param  __v  The value of src_system_id.
*/
public void setSrc_system_id(String __v) {
this.src_system_id = __v;
}
/** Copy constructor. Performs a deep copy of the nodes, but not the values.
 * @param  __o  The node to copy.
*/
public FrozenHolder(FrozenBase __o) {
src_system_id = __o.getSrc_system_id();
src_system_idValid = __o.isSrc_system_idValid();
}
}
