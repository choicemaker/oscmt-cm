// Generated by ChoiceMaker. Do not edit.
package com.choicemaker.cm.testobjects.mci.MciRecords;
import com.choicemaker.util.StringUtils;
import com.choicemaker.cm.custom.mci.encryption.*;
import com.choicemaker.cm.custom.mci.matching.*;
import com.choicemaker.cm.custom.mci.nameparser.*;
import com.choicemaker.cm.custom.mci.validation.*;
import com.choicemaker.cm.matching.en.*;
import com.choicemaker.cm.matching.en.us.*;
import com.choicemaker.cm.matching.gen.*;
import com.choicemaker.cm.validation.eclipse.*;
import com.choicemaker.cm.validation.eclipse.impl.*;
import java.util.*;
/**
 * Generated holder class for the node type address. See package documentation for details.
 */
public class AddressHolder implements com.choicemaker.cm.testobjects.mci.MciRecords.AddressBase, java.io.Serializable {
/** Default constructor. Initializes all all arrays for nested record to zero length arrays and all other values to their defaults (0/null). */public AddressHolder() {
rel = RelHolder.ZERO_ARRAY;
}
/** Zero length array to be used by outer node class. */
public static final AddressHolder[] ZERO_ARRAY = new AddressHolder[0];
private PatientBase outer;
/**
 * Returns the outer node.
 * @return  The outer node.
*/
public PatientBase getOuter() {
return outer;
}
/**
 * Sets the outer node. This method should only be called by generated classes.
 * @param  outer  The outer node.
*/
public void setOuter(PatientBase outer) {
this.outer = outer;
}
private boolean addr_idValid;
protected long addr_id;
/**
 * Returns whether the value of the field addr_id is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field addr_id is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isAddr_idValid() {
return addr_idValid;
}
/**
 * Returns the value of addr_id.
 * @return  The value of addr_id.
*/
public long getAddr_id() {
return addr_id;
}
/**
 * Sets the value of addr_id.
 * @param  __v  The value of addr_id.
*/
public void setAddr_id(long __v) {
this.addr_id = __v;
}
private boolean boro_cdValid;
protected char boro_cd;
/**
 * Returns whether the value of the field boro_cd is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field boro_cd is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isBoro_cdValid() {
return boro_cdValid;
}
/**
 * Returns the value of boro_cd.
 * @return  The value of boro_cd.
*/
public char getBoro_cd() {
return boro_cd;
}
/**
 * Sets the value of boro_cd.
 * @param  __v  The value of boro_cd.
*/
public void setBoro_cd(char __v) {
this.boro_cd = __v;
}
private boolean binValid;
protected long bin;
/**
 * Returns whether the value of the field bin is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field bin is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isBinValid() {
return binValid;
}
/**
 * Returns the value of bin.
 * @return  The value of bin.
*/
public long getBin() {
return bin;
}
/**
 * Sets the value of bin.
 * @param  __v  The value of bin.
*/
public void setBin(long __v) {
this.bin = __v;
}
private boolean house_noValid;
protected String house_no;
/**
 * Returns whether the value of the field house_no is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field house_no is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isHouse_noValid() {
return house_noValid;
}
/**
 * Returns the value of house_no.
 * @return  The value of house_no.
*/
public String getHouse_no() {
return house_no;
}
/**
 * Sets the value of house_no.
 * @param  __v  The value of house_no.
*/
public void setHouse_no(String __v) {
this.house_no = __v;
}
private boolean street_cdValid;
protected String street_cd;
/**
 * Returns whether the value of the field street_cd is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field street_cd is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isStreet_cdValid() {
return street_cdValid;
}
/**
 * Returns the value of street_cd.
 * @return  The value of street_cd.
*/
public String getStreet_cd() {
return street_cd;
}
/**
 * Sets the value of street_cd.
 * @param  __v  The value of street_cd.
*/
public void setStreet_cd(String __v) {
this.street_cd = __v;
}
private boolean street_nameValid;
protected String street_name;
/**
 * Returns whether the value of the field street_name is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field street_name is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isStreet_nameValid() {
return street_nameValid;
}
/**
 * Returns the value of street_name.
 * @return  The value of street_name.
*/
public String getStreet_name() {
return street_name;
}
/**
 * Sets the value of street_name.
 * @param  __v  The value of street_name.
*/
public void setStreet_name(String __v) {
this.street_name = __v;
}
private boolean city_nameValid;
protected String city_name;
/**
 * Returns whether the value of the field city_name is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field city_name is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isCity_nameValid() {
return city_nameValid;
}
/**
 * Returns the value of city_name.
 * @return  The value of city_name.
*/
public String getCity_name() {
return city_name;
}
/**
 * Sets the value of city_name.
 * @param  __v  The value of city_name.
*/
public void setCity_name(String __v) {
this.city_name = __v;
}
private boolean state_cdValid;
protected String state_cd;
/**
 * Returns whether the value of the field state_cd is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field state_cd is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isState_cdValid() {
return state_cdValid;
}
/**
 * Returns the value of state_cd.
 * @return  The value of state_cd.
*/
public String getState_cd() {
return state_cd;
}
/**
 * Sets the value of state_cd.
 * @param  __v  The value of state_cd.
*/
public void setState_cd(String __v) {
this.state_cd = __v;
}
private boolean zipcodeValid;
protected String zipcode;
/**
 * Returns whether the value of the field zipcode is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field zipcode is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isZipcodeValid() {
return zipcodeValid;
}
/**
 * Returns the value of zipcode.
 * @return  The value of zipcode.
*/
public String getZipcode() {
return zipcode;
}
/**
 * Sets the value of zipcode.
 * @param  __v  The value of zipcode.
*/
public void setZipcode(String __v) {
this.zipcode = __v;
}
protected RelBase[] rel;
/**
 * Returns the nested nodes of type rel.
 * @return  The nested nodes of type rel.
*/
public RelBase[] getRel() {
return rel;
}
/**
 * Sets the nested nodes of type rel.
 * The value may not be <code>null</code> and all array elements must be non <code>null</code>.
 * @param  __val  The nested nodes of type rel.
*/
public void setRel(RelBase[] __val) {
this.rel = __val;
for(int __i = 0; __i < rel.length; ++__i) {
__val[__i].setOuter(this);
}
}
/**
 * Returns the nested rel at the specified index.
 * @param  __index  The index.
 * @return  The nested rel at the specified index.
*/
public RelBase getRel(int __index) {
return rel[__index];
}
/**
 * Sets the nested node at the specified index.
 * @param   __val  The value. Must not be <code>null</code>.
 * @param  __index  The index.
*/
public void setRel(int __index, RelBase __val) {
this.rel[__index] = __val;
__val.setOuter(this);
}
/** Copy constructor. Performs a deep copy of the nodes, but not the values.
 * @param  __o  The node to copy.
*/
public AddressHolder(AddressBase __o) {
addr_id = __o.getAddr_id();
addr_idValid = __o.isAddr_idValid();
boro_cd = __o.getBoro_cd();
boro_cdValid = __o.isBoro_cdValid();
bin = __o.getBin();
binValid = __o.isBinValid();
house_no = __o.getHouse_no();
house_noValid = __o.isHouse_noValid();
street_cd = __o.getStreet_cd();
street_cdValid = __o.isStreet_cdValid();
street_name = __o.getStreet_name();
street_nameValid = __o.isStreet_nameValid();
city_name = __o.getCity_name();
city_nameValid = __o.isCity_nameValid();
state_cd = __o.getState_cd();
state_cdValid = __o.isState_cdValid();
zipcode = __o.getZipcode();
zipcodeValid = __o.isZipcodeValid();
RelBase[] __orel = __o.getRel();
rel = new RelBase[__orel.length];
for(int __i = 0; __i < rel.length; ++__i) {
(rel[__i] = new RelHolder(__orel[__i])).setOuter(this);
}
}
}
