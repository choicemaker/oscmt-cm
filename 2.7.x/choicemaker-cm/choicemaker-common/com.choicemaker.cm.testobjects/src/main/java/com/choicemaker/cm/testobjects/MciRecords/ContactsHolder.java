// Generated by ChoiceMaker. Do not edit.
package com.choicemaker.cm.custom.mci.gend.MciRecords;
import com.choicemaker.util.StringUtils;
import com.choicemaker.cm.custom.mci.encryption.*;
import com.choicemaker.cm.custom.mci.matching.*;
import com.choicemaker.cm.custom.mci.nameparser.*;
import com.choicemaker.cm.custom.mci.validation.*;
import com.choicemaker.cm.matching.en.*;
import com.choicemaker.cm.matching.en.us.*;
import com.choicemaker.cm.matching.gen.*;
import com.choicemaker.cm.validation.eclipse.*;
import com.choicemaker.cm.validation.eclipse.impl.*;
import java.util.*;
/**
 * Generated holder class for the node type contacts. See package documentation for details.
 */
public class ContactsHolder implements com.choicemaker.cm.custom.mci.gend.MciRecords.ContactsBase, java.io.Serializable {
/** Default constructor. Initializes all all arrays for nested record to zero length arrays and all other values to their defaults (0/null). */public ContactsHolder() {
}
/** Zero length array to be used by outer node class. */
public static final ContactsHolder[] ZERO_ARRAY = new ContactsHolder[0];
private PatientBase outer;
/**
 * Returns the outer node.
 * @return  The outer node.
*/
public PatientBase getOuter() {
return outer;
}
/**
 * Sets the outer node. This method should only be called by generated classes.
 * @param  outer  The outer node.
*/
public void setOuter(PatientBase outer) {
this.outer = outer;
}
private boolean relationship_cdValid;
protected String relationship_cd;
/**
 * Returns whether the value of the field relationship_cd is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field relationship_cd is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isRelationship_cdValid() {
return relationship_cdValid;
}
/**
 * Returns the value of relationship_cd.
 * @return  The value of relationship_cd.
*/
public String getRelationship_cd() {
return relationship_cd;
}
/**
 * Sets the value of relationship_cd.
 * @param  __v  The value of relationship_cd.
*/
public void setRelationship_cd(String __v) {
this.relationship_cd = __v;
}
private boolean last_nameValid;
protected String last_name;
/**
 * Returns whether the value of the field last_name is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field last_name is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isLast_nameValid() {
return last_nameValid;
}
/**
 * Returns the value of last_name.
 * @return  The value of last_name.
*/
public String getLast_name() {
return last_name;
}
/**
 * Sets the value of last_name.
 * @param  __v  The value of last_name.
*/
public void setLast_name(String __v) {
this.last_name = __v;
}
private boolean first_nameValid;
protected String first_name;
/**
 * Returns whether the value of the field first_name is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field first_name is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isFirst_nameValid() {
return first_nameValid;
}
/**
 * Returns the value of first_name.
 * @return  The value of first_name.
*/
public String getFirst_name() {
return first_name;
}
/**
 * Sets the value of first_name.
 * @param  __v  The value of first_name.
*/
public void setFirst_name(String __v) {
this.first_name = __v;
}
private boolean sex_cdValid;
protected char sex_cd;
/**
 * Returns whether the value of the field sex_cd is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field sex_cd is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isSex_cdValid() {
return sex_cdValid;
}
/**
 * Returns the value of sex_cd.
 * @return  The value of sex_cd.
*/
public char getSex_cd() {
return sex_cd;
}
/**
 * Sets the value of sex_cd.
 * @param  __v  The value of sex_cd.
*/
public void setSex_cd(char __v) {
this.sex_cd = __v;
}
private boolean phone_no_hValid;
protected String phone_no_h;
/**
 * Returns whether the value of the field phone_no_h is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field phone_no_h is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isPhone_no_hValid() {
return phone_no_hValid;
}
/**
 * Returns the value of phone_no_h.
 * @return  The value of phone_no_h.
*/
public String getPhone_no_h() {
return phone_no_h;
}
/**
 * Sets the value of phone_no_h.
 * @param  __v  The value of phone_no_h.
*/
public void setPhone_no_h(String __v) {
this.phone_no_h = __v;
}
private boolean phone_no_wValid;
protected String phone_no_w;
/**
 * Returns whether the value of the field phone_no_w is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field phone_no_w is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isPhone_no_wValid() {
return phone_no_wValid;
}
/**
 * Returns the value of phone_no_w.
 * @return  The value of phone_no_w.
*/
public String getPhone_no_w() {
return phone_no_w;
}
/**
 * Sets the value of phone_no_w.
 * @param  __v  The value of phone_no_w.
*/
public void setPhone_no_w(String __v) {
this.phone_no_w = __v;
}
/** Copy constructor. Performs a deep copy of the nodes, but not the values.
 * @param  __o  The node to copy.
*/
public ContactsHolder(ContactsBase __o) {
relationship_cd = __o.getRelationship_cd();
relationship_cdValid = __o.isRelationship_cdValid();
last_name = __o.getLast_name();
last_nameValid = __o.isLast_nameValid();
first_name = __o.getFirst_name();
first_nameValid = __o.isFirst_nameValid();
sex_cd = __o.getSex_cd();
sex_cdValid = __o.isSex_cdValid();
phone_no_h = __o.getPhone_no_h();
phone_no_hValid = __o.isPhone_no_hValid();
phone_no_w = __o.getPhone_no_w();
phone_no_wValid = __o.isPhone_no_wValid();
}
}
