// Generated by ChoiceMaker. Do not edit.
package com.choicemaker.cm.custom.mci.internal.MciRecords;
import com.choicemaker.cm.core.*;
import com.choicemaker.cm.core.base.*;
import java.util.logging.*;
import com.choicemaker.util.StringUtils;







import com.choicemaker.cm.testobjects.mci.MciRecords.Frozen;
import com.choicemaker.cm.testobjects.mci.MciRecords.FrozenBase;
import com.choicemaker.cm.testobjects.mci.MciRecords.PatientBase;


import java.util.*;

public class FrozenImpl implements BaseRecord, Frozen {
private static Logger logger = Logger.getLogger(com.choicemaker.cm.custom.mci.internal.MciRecords.FrozenImpl.class.getName());
public static FrozenImpl[] __zeroArray = new FrozenImpl[0];
public PatientImpl outer;
public PatientBase getOuter() {
return outer;
}
public void setOuter(PatientBase outer) {
this.outer = (PatientImpl)outer;
}
public boolean __v_src_system_id;
public String src_system_id;
public boolean isSrc_system_idValid() {
return __v_src_system_id;
}
public String getSrc_system_id() {
return src_system_id;
}
public FrozenImpl(FrozenBase __o) {
src_system_id = __o.getSrc_system_id();
}
public FrozenImpl() {
}
public void computeValidityAndDerived(DerivedSource __src) {
java.lang.String __tmpStr;
try {
__v_src_system_id = StringUtils.nonEmptyString(src_system_id);
} catch(Exception __ex) {
logger.severe("Computing validity and derived of FrozenImpl" + __ex);
}
}
public void resetValidityAndDerived(DerivedSource __src) {
}
public static FrozenImpl instance() {
FrozenImpl tmpInstance = new FrozenImpl();
return tmpInstance;
}
}
