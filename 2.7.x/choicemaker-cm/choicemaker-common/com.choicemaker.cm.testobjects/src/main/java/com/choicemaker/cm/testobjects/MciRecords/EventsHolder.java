// Generated by ChoiceMaker. Do not edit.
package com.choicemaker.cm.custom.mci.gend.MciRecords;
import com.choicemaker.util.StringUtils;
import com.choicemaker.cm.custom.mci.encryption.*;
import com.choicemaker.cm.custom.mci.matching.*;
import com.choicemaker.cm.custom.mci.nameparser.*;
import com.choicemaker.cm.custom.mci.validation.*;
import com.choicemaker.cm.matching.en.*;
import com.choicemaker.cm.matching.en.us.*;
import com.choicemaker.cm.matching.gen.*;
import com.choicemaker.cm.validation.eclipse.*;
import com.choicemaker.cm.validation.eclipse.impl.*;
import java.util.*;
/**
 * Generated holder class for the node type events. See package documentation for details.
 */
public class EventsHolder implements com.choicemaker.cm.custom.mci.gend.MciRecords.EventsBase, java.io.Serializable {
/** Default constructor. Initializes all all arrays for nested record to zero length arrays and all other values to their defaults (0/null). */public EventsHolder() {
}
/** Zero length array to be used by outer node class. */
public static final EventsHolder[] ZERO_ARRAY = new EventsHolder[0];
private PatientBase outer;
/**
 * Returns the outer node.
 * @return  The outer node.
*/
public PatientBase getOuter() {
return outer;
}
/**
 * Sets the outer node. This method should only be called by generated classes.
 * @param  outer  The outer node.
*/
public void setOuter(PatientBase outer) {
this.outer = outer;
}
private boolean event_dateValid;
protected Date event_date;
/**
 * Returns whether the value of the field event_date is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field event_date is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isEvent_dateValid() {
return event_dateValid;
}
/**
 * Returns the value of event_date.
 * @return  The value of event_date.
*/
public Date getEvent_date() {
return event_date;
}
/**
 * Sets the value of event_date.
 * @param  __v  The value of event_date.
*/
public void setEvent_date(Date __v) {
this.event_date = __v;
}
private boolean event_type_cdValid;
protected String event_type_cd;
/**
 * Returns whether the value of the field event_type_cd is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field event_type_cd is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isEvent_type_cdValid() {
return event_type_cdValid;
}
/**
 * Returns the value of event_type_cd.
 * @return  The value of event_type_cd.
*/
public String getEvent_type_cd() {
return event_type_cd;
}
/**
 * Sets the value of event_type_cd.
 * @param  __v  The value of event_type_cd.
*/
public void setEvent_type_cd(String __v) {
this.event_type_cd = __v;
}
private boolean facility_idValid;
protected String facility_id;
/**
 * Returns whether the value of the field facility_id is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field facility_id is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isFacility_idValid() {
return facility_idValid;
}
/**
 * Returns the value of facility_id.
 * @return  The value of facility_id.
*/
public String getFacility_id() {
return facility_id;
}
/**
 * Sets the value of facility_id.
 * @param  __v  The value of facility_id.
*/
public void setFacility_id(String __v) {
this.facility_id = __v;
}
private boolean event_idValid;
protected String event_id;
/**
 * Returns whether the value of the field event_id is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field event_id is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isEvent_idValid() {
return event_idValid;
}
/**
 * Returns the value of event_id.
 * @return  The value of event_id.
*/
public String getEvent_id() {
return event_id;
}
/**
 * Sets the value of event_id.
 * @param  __v  The value of event_id.
*/
public void setEvent_id(String __v) {
this.event_id = __v;
}
private boolean lab_dateValid;
protected Date lab_date;
/**
 * Returns whether the value of the field lab_date is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field lab_date is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isLab_dateValid() {
return lab_dateValid;
}
/**
 * Returns the value of lab_date.
 * @return  The value of lab_date.
*/
public Date getLab_date() {
return lab_date;
}
/**
 * Sets the value of lab_date.
 * @param  __v  The value of lab_date.
*/
public void setLab_date(Date __v) {
this.lab_date = __v;
}
/** Copy constructor. Performs a deep copy of the nodes, but not the values.
 * @param  __o  The node to copy.
*/
public EventsHolder(EventsBase __o) {
event_date = __o.getEvent_date();
event_dateValid = __o.isEvent_dateValid();
event_type_cd = __o.getEvent_type_cd();
event_type_cdValid = __o.isEvent_type_cdValid();
facility_id = __o.getFacility_id();
facility_idValid = __o.isFacility_idValid();
event_id = __o.getEvent_id();
event_idValid = __o.isEvent_idValid();
lab_date = __o.getLab_date();
lab_dateValid = __o.isLab_dateValid();
}
}
