// Generated by ChoiceMaker. Do not edit.
package com.choicemaker.cm.custom.mci.internal.MciRecords;
import com.choicemaker.cm.core.*;
import com.choicemaker.cm.core.base.*;
import java.util.logging.*;
import com.choicemaker.util.StringUtils;







import com.choicemaker.cm.testobjects.mci.MciRecords.Events;
import com.choicemaker.cm.testobjects.mci.MciRecords.EventsBase;
import com.choicemaker.cm.testobjects.mci.MciRecords.PatientBase;


import java.util.*;

public class EventsImpl implements BaseRecord, Events {
private static Logger logger = Logger.getLogger(com.choicemaker.cm.custom.mci.internal.MciRecords.EventsImpl.class.getName());
public static EventsImpl[] __zeroArray = new EventsImpl[0];
public PatientImpl outer;
public PatientBase getOuter() {
return outer;
}
public void setOuter(PatientBase outer) {
this.outer = (PatientImpl)outer;
}
public boolean __v_event_date;
public boolean __v_event_type_cd;
public boolean __v_facility_id;
public boolean __v_event_id;
public boolean __v_lab_date;
public boolean __v_disease_cd;
public Date event_date;
public boolean isEvent_dateValid() {
return __v_event_date;
}
public Date getEvent_date() {
return event_date;
}
public String event_type_cd;
public boolean isEvent_type_cdValid() {
return __v_event_type_cd;
}
public String getEvent_type_cd() {
return event_type_cd;
}
public String facility_id;
public boolean isFacility_idValid() {
return __v_facility_id;
}
public String getFacility_id() {
return facility_id;
}
public String event_id;
public boolean isEvent_idValid() {
return __v_event_id;
}
public String getEvent_id() {
return event_id;
}
public Date lab_date;
public boolean isLab_dateValid() {
return __v_lab_date;
}
public Date getLab_date() {
return lab_date;
}
public String disease_cd;
public boolean isDisease_cdValid() {
return __v_disease_cd;
}
public String getDisease_cd() {
return disease_cd;
}
public EventsImpl(EventsBase __o) {
event_date = __o.getEvent_date();
event_type_cd = __o.getEvent_type_cd();
facility_id = __o.getFacility_id();
event_id = __o.getEvent_id();
lab_date = __o.getLab_date();
}
public EventsImpl() {
}
public void computeValidityAndDerived(DerivedSource __src) {
java.lang.String __tmpStr;
try {
__v_event_date = event_date != null;
__v_event_type_cd = StringUtils.nonEmptyString(event_type_cd);
__v_facility_id = StringUtils.nonEmptyString(facility_id);
__v_event_id = StringUtils.nonEmptyString(event_id);
__v_lab_date = lab_date != null;
if(__src1.includes(__src)) {
if(__v_event_type_cd && __v_event_id && event_type_cd.equals("CDSS")) {


}
} else {

}
} catch(Exception __ex) {
logger.severe("Computing validity and derived of EventsImpl" + __ex);
}
}
public void resetValidityAndDerived(DerivedSource __src) {
if(__src1.includes(__src)) {
disease_cd = null;
__v_disease_cd = false;
}
}
public static EventsImpl instance() {
EventsImpl tmpInstance = new EventsImpl();
return tmpInstance;
}
private static DerivedSource __src1 = DerivedSource.valueOf("all");
}
