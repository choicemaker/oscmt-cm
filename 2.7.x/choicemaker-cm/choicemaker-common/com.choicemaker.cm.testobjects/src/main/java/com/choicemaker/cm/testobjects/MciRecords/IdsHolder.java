// Generated by ChoiceMaker. Do not edit.
package com.choicemaker.cm.custom.mci.gend.MciRecords;
import com.choicemaker.util.StringUtils;
import com.choicemaker.cm.custom.mci.encryption.*;
import com.choicemaker.cm.custom.mci.matching.*;
import com.choicemaker.cm.custom.mci.nameparser.*;
import com.choicemaker.cm.custom.mci.validation.*;
import com.choicemaker.cm.matching.en.*;
import com.choicemaker.cm.matching.en.us.*;
import com.choicemaker.cm.matching.gen.*;
import com.choicemaker.cm.validation.eclipse.*;
import com.choicemaker.cm.validation.eclipse.impl.*;
import java.util.*;
/**
 * Generated holder class for the node type ids. See package documentation for details.
 */
public class IdsHolder implements com.choicemaker.cm.custom.mci.gend.MciRecords.IdsBase, java.io.Serializable {
/** Default constructor. Initializes all all arrays for nested record to zero length arrays and all other values to their defaults (0/null). */public IdsHolder() {
}
/** Zero length array to be used by outer node class. */
public static final IdsHolder[] ZERO_ARRAY = new IdsHolder[0];
private PatientBase outer;
/**
 * Returns the outer node.
 * @return  The outer node.
*/
public PatientBase getOuter() {
return outer;
}
/**
 * Sets the outer node. This method should only be called by generated classes.
 * @param  outer  The outer node.
*/
public void setOuter(PatientBase outer) {
this.outer = outer;
}
private boolean patient_idValid;
protected String patient_id;
/**
 * Returns whether the value of the field patient_id is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field patient_id is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isPatient_idValid() {
return patient_idValid;
}
/**
 * Returns the value of patient_id.
 * @return  The value of patient_id.
*/
public String getPatient_id() {
return patient_id;
}
/**
 * Sets the value of patient_id.
 * @param  __v  The value of patient_id.
*/
public void setPatient_id(String __v) {
this.patient_id = __v;
}
private boolean identifier_typeValid;
protected String identifier_type;
/**
 * Returns whether the value of the field identifier_type is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field identifier_type is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isIdentifier_typeValid() {
return identifier_typeValid;
}
/**
 * Returns the value of identifier_type.
 * @return  The value of identifier_type.
*/
public String getIdentifier_type() {
return identifier_type;
}
/**
 * Sets the value of identifier_type.
 * @param  __v  The value of identifier_type.
*/
public void setIdentifier_type(String __v) {
this.identifier_type = __v;
}
private boolean facility_idValid;
protected String facility_id;
/**
 * Returns whether the value of the field facility_id is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field facility_id is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isFacility_idValid() {
return facility_idValid;
}
/**
 * Returns the value of facility_id.
 * @return  The value of facility_id.
*/
public String getFacility_id() {
return facility_id;
}
/**
 * Sets the value of facility_id.
 * @param  __v  The value of facility_id.
*/
public void setFacility_id(String __v) {
this.facility_id = __v;
}
/** Copy constructor. Performs a deep copy of the nodes, but not the values.
 * @param  __o  The node to copy.
*/
public IdsHolder(IdsBase __o) {
patient_id = __o.getPatient_id();
patient_idValid = __o.isPatient_idValid();
identifier_type = __o.getIdentifier_type();
identifier_typeValid = __o.isIdentifier_typeValid();
facility_id = __o.getFacility_id();
facility_idValid = __o.isFacility_idValid();
}
}
