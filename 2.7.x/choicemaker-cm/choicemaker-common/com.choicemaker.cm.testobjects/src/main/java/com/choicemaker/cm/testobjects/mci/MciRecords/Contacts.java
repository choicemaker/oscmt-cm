// Generated by ChoiceMaker. Do not edit.
package com.choicemaker.cm.testobjects.mci.MciRecords;
import com.choicemaker.util.StringUtils;
import com.choicemaker.cm.custom.mci.encryption.*;
import com.choicemaker.cm.custom.mci.matching.*;
import com.choicemaker.cm.custom.mci.nameparser.*;
import com.choicemaker.cm.custom.mci.validation.*;
import com.choicemaker.cm.matching.en.*;
import com.choicemaker.cm.matching.en.us.*;
import com.choicemaker.cm.matching.gen.*;
import com.choicemaker.cm.validation.eclipse.*;
import com.choicemaker.cm.validation.eclipse.impl.*;
import java.util.*;
/**
 * Generated interface for the node type contacts. See package documentation for details.
 */
public interface Contacts extends ContactsBase {
/**
 * Returns whether the value of the field parsedContactName is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field parsedContactName is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isParsedContactNameValid();
/**
 * Returns the value of parsedContactName.
 * @return  The value of parsedContactName.
*/
public NameParser getParsedContactName();
/**
 * Returns whether the value of the field nameF is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field nameF is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isNameFValid();
/**
 * Returns the value of nameF.
 * @return  The value of nameF.
*/
public String getNameF();
/**
 * Returns whether the value of the field nameM is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field nameM is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isNameMValid();
/**
 * Returns the value of nameM.
 * @return  The value of nameM.
*/
public String getNameM();
/**
 * Returns whether the value of the field nameL is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field nameL is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isNameLValid();
/**
 * Returns the value of nameL.
 * @return  The value of nameL.
*/
public String getNameL();
/**
 * Returns whether the value of the field nameMaidn is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field nameMaidn is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isNameMaidnValid();
/**
 * Returns the value of nameMaidn.
 * @return  The value of nameMaidn.
*/
public String getNameMaidn();
/**
 * Returns whether the value of the field nameT is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field nameT is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isNameTValid();
/**
 * Returns the value of nameT.
 * @return  The value of nameT.
*/
public String getNameT();
/**
 * Returns whether the value of the field clean_phone_no_h is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field clean_phone_no_h is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isClean_phone_no_hValid();
/**
 * Returns the value of clean_phone_no_h.
 * @return  The value of clean_phone_no_h.
*/
public String getClean_phone_no_h();
/**
 * Returns whether the value of the field clean_phone_no_w is valid according to the validity predicate in the ChoiceMaker schema.
 * @return  Whether the value of the field clean_phone_no_w is valid according to the validity predicate in the ChoiceMaker schema.
*/
public boolean isClean_phone_no_wValid();
/**
 * Returns the value of clean_phone_no_w.
 * @return  The value of clean_phone_no_w.
*/
public String getClean_phone_no_w();
}
