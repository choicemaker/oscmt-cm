// Generated by ChoiceMaker. Do not edit.
package com.choicemaker.cm.testobjects.mci.internal.MciRecords.xml;
import java.util.logging.*;
import java.util.*;
import java.io.*;
import com.choicemaker.cm.core.*;
import com.choicemaker.cm.core.base.*;
import com.choicemaker.cm.core.util.*;
import com.choicemaker.cm.io.xml.base.*;
import com.choicemaker.util.*;














import com.choicemaker.util.StringUtils;









import java.util.*;
public final class MciRecordsXmlRecordOutputter implements XmlRecordOutputter {
private static Logger logger = Logger.getLogger(com.choicemaker.cm.testobjects.mci.internal.MciRecords.xml.MciRecordsXmlRecordOutputter.class.getName());
public void put(Writer w, Record r) throws IOException {
put_PatientImpl(w, (PatientImpl)r);
}
private void put_PatientImpl(Writer w, PatientImpl r) throws IOException {
w.write("<patient");
XmlOutput.writeAttribute(w, "mci_id", r.mci_id);
XmlOutput.writeAttribute(w, "facility_id", r.facility_id);
XmlOutput.writeAttribute(w, "language_cd", r.language_cd);
XmlOutput.writeAttribute(w, "birth_country_cd", r.birth_country_cd);
XmlOutput.writeAttribute(w, "multi_birth_ind", r.multi_birth_ind);
XmlOutput.writeAttribute(w, "src_system_id", r.src_system_id);
w.write(">\n");
for(int i = 0; i < r.names.length; ++i) {
put_NamesImpl(w, r.names[i]);
}
for(int i = 0; i < r.ethnicity.length; ++i) {
put_EthnicityImpl(w, r.ethnicity[i]);
}
for(int i = 0; i < r.race.length; ++i) {
put_RaceImpl(w, r.race[i]);
}
for(int i = 0; i < r.ids.length; ++i) {
put_IdsImpl(w, r.ids[i]);
}
for(int i = 0; i < r.address.length; ++i) {
put_AddressImpl(w, r.address[i]);
}
for(int i = 0; i < r.contacts.length; ++i) {
put_ContactsImpl(w, r.contacts[i]);
}
for(int i = 0; i < r.mothers.length; ++i) {
put_MothersImpl(w, r.mothers[i]);
}
for(int i = 0; i < r.events.length; ++i) {
put_EventsImpl(w, r.events[i]);
}
for(int i = 0; i < r.providers.length; ++i) {
put_ProvidersImpl(w, r.providers[i]);
}
for(int i = 0; i < r.frozen.length; ++i) {
put_FrozenImpl(w, r.frozen[i]);
}
for(int i = 0; i < r.indexAndOutstanding.length; ++i) {
put_IndexAndOutstandingImpl(w, r.indexAndOutstanding[i]);
}
w.write("</patient>\n");
}
private void put_NamesImpl(Writer w, NamesImpl r) throws IOException {
w.write("<names");
XmlOutput.writeAttribute(w, "first_name", r.first_name);
XmlOutput.writeAttribute(w, "middle_name", r.middle_name);
XmlOutput.writeAttribute(w, "last_name", r.last_name);
XmlOutput.writeAttribute(w, "dob", r.dob);
XmlOutput.writeAttribute(w, "sex_cd", r.sex_cd);
XmlOutput.writeAttribute(w, "facility_id", r.facility_id);
w.write("/>\n");
}
private void put_EthnicityImpl(Writer w, EthnicityImpl r) throws IOException {
w.write("<ethnicity");
XmlOutput.writeAttribute(w, "ethnicity_cd", r.ethnicity_cd);
w.write("/>\n");
}
private void put_RaceImpl(Writer w, RaceImpl r) throws IOException {
w.write("<race");
XmlOutput.writeAttribute(w, "race_cd", r.race_cd);
w.write("/>\n");
}
private void put_IdsImpl(Writer w, IdsImpl r) throws IOException {
w.write("<ids");
XmlOutput.writeAttribute(w, "patient_id", r.patient_id);
XmlOutput.writeAttribute(w, "identifier_type", r.identifier_type);
XmlOutput.writeAttribute(w, "facility_id", r.facility_id);
w.write("/>\n");
}
private void put_AddressImpl(Writer w, AddressImpl r) throws IOException {
w.write("<address");
XmlOutput.writeAttribute(w, "addr_id", r.addr_id);
XmlOutput.writeAttribute(w, "boro_cd", r.boro_cd);
XmlOutput.writeAttribute(w, "bin", r.bin);
XmlOutput.writeAttribute(w, "house_no", r.house_no);
XmlOutput.writeAttribute(w, "street_cd", r.street_cd);
XmlOutput.writeAttribute(w, "street_name", r.street_name);
XmlOutput.writeAttribute(w, "city_name", r.city_name);
XmlOutput.writeAttribute(w, "state_cd", r.state_cd);
XmlOutput.writeAttribute(w, "zipcode", r.zipcode);
w.write(">\n");
for(int i = 0; i < r.rel.length; ++i) {
put_RelImpl(w, r.rel[i]);
}
w.write("</address>\n");
}
private void put_RelImpl(Writer w, RelImpl r) throws IOException {
w.write("<rel");
XmlOutput.writeAttribute(w, "last_date_rptd", r.last_date_rptd);
XmlOutput.writeAttribute(w, "apt_no", r.apt_no);
XmlOutput.writeAttribute(w, "addr_type_cd", r.addr_type_cd);
XmlOutput.writeAttribute(w, "raw_street_name", r.raw_street_name);
XmlOutput.writeAttribute(w, "phone_no", r.phone_no);
w.write("/>\n");
}
private void put_ContactsImpl(Writer w, ContactsImpl r) throws IOException {
w.write("<contacts");
XmlOutput.writeAttribute(w, "relationship_cd", r.relationship_cd);
XmlOutput.writeAttribute(w, "last_name", r.last_name);
XmlOutput.writeAttribute(w, "first_name", r.first_name);
XmlOutput.writeAttribute(w, "sex_cd", r.sex_cd);
XmlOutput.writeAttribute(w, "phone_no_h", r.phone_no_h);
XmlOutput.writeAttribute(w, "phone_no_w", r.phone_no_w);
w.write("/>\n");
}
private void put_MothersImpl(Writer w, MothersImpl r) throws IOException {
w.write("<mothers");
XmlOutput.writeAttribute(w, "mothers_maiden_name", r.mothers_maiden_name);
XmlOutput.writeAttribute(w, "mothers_dob", r.mothers_dob);
w.write("/>\n");
}
private void put_EventsImpl(Writer w, EventsImpl r) throws IOException {
w.write("<events");
XmlOutput.writeAttribute(w, "event_date", r.event_date);
XmlOutput.writeAttribute(w, "event_type_cd", r.event_type_cd);
XmlOutput.writeAttribute(w, "facility_id", r.facility_id);
XmlOutput.writeAttribute(w, "event_id", r.event_id);
XmlOutput.writeAttribute(w, "lab_date", r.lab_date);
w.write("/>\n");
}
private void put_ProvidersImpl(Writer w, ProvidersImpl r) throws IOException {
w.write("<providers");
XmlOutput.writeAttribute(w, "provider_id", r.provider_id);
XmlOutput.writeAttribute(w, "facility_id", r.facility_id);
w.write("/>\n");
}
private void put_FrozenImpl(Writer w, FrozenImpl r) throws IOException {
w.write("<frozen");
XmlOutput.writeAttribute(w, "src_system_id", r.src_system_id);
w.write("/>\n");
}
private void put_IndexAndOutstandingImpl(Writer w, IndexAndOutstandingImpl r) throws IOException {
w.write("<indexAndOutstanding");
XmlOutput.writeAttribute(w, "src_system_id", r.src_system_id);
XmlOutput.writeAttribute(w, "patient_id", r.patient_id);
w.write("/>\n");
}
}
